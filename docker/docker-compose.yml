version: "3.9"

services:
  influxdb:
    image: influxdb:latest
    volumes:
      - influxdbVolume:/var/lib/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: username
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: myorg
      DOCKER_INFLUXDB_INIT_BUCKET: mybucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: universal_api_token
    ports:
      - 8086:8086
    networks:
      - aggregator

  aggregator:
    build:
      context: ../backend
    image: backend:latest
    container_name: backend
    environment:
      INFLUXDB_HOST: http://influxdb:8086
      INFLUXDB_TOKEN: universal_api_token
      INFLUXDB_ORG: myorg
      INFLUXDB_BUCKET: mybucket
    ports:
      - 3000:3000
    networks:
      - default
      - aggregator
    depends_on:
      - influxdb

  prosumer:
    build:
      context: ../prosumer
    image: prosumer:latest
    container_name: prosumer
    environment:
      AGGREGATION_THRESHOLD: "10"
      AGGREGATOR_URL: http://aggregator:3000
    ports:
      - 3000:3001
    networks:
      - default
    depends_on:
      - influxdb
      - aggregator

  der1:
    build:
      context: ../der
    image: der:latest
    container_name: der1
    environment:
      SLEEP_SEC: "4"
      PROSUMER_URL: http://prosumer:3000
      ASSET_DID: did:ethr:0x0000000000000000000000000000000000000001
    networks:
      - default
    depends_on:
      - prosumer

  der2:
    build:
      context: ../der
    image: der:latest
    container_name: der2
    environment:
      SLEEP_SEC: "5"
      PROSUMER_URL: http://prosumer:3000
      ASSET_DID: did:ethr:0x0000000000000000000000000000000000000002
    networks:
      - default
    depends_on:
      - prosumer

volumes:
  influxdbVolume:

networks:
  aggregator:
  default:
